import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "/fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "/fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const getistKanit = localFont({
  src: "/fonts/Arima-VariableFont_wght.ttf",
  variable: "--font-get-kanit",
  weight: "100 900",
});

const poppins = localFont({
  src: [
    { path: "./fonts/Poppins-ExtraLight.ttf", weight: "100" },
    { path: "./fonts/Poppins-Thin.ttf", weight: "200" },
    { path: "./fonts/Poppins-Light.ttf", weight: "300" },
    { path: "./fonts/Poppins-Regular.ttf", weight: "400" },
    { path: "./fonts/Poppins-Medium.ttf", weight: "500" },
    { path: "./fonts/Poppins-SemiBold.ttf", weight: "600" },
    { path: "./fonts/Poppins-Bold.ttf", weight: "800" },
  ],
  variable: "--font-poppins",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`bg-black ${geistSans.variable} ${geistMono.variable} ${getistKanit.variable} ${poppins.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
